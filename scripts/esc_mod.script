function cam_anim()
	--level.run_demo_play([[mod\2]]);
end

function start_find_art()
	local id = get_story_object_id('esc_fabrika_inv_box')
	id = alife():create("fabric_art", vector(), 0, 0, id).id
	
	db.actor:give_info_portion("esc_find_art_start")
	add_story_object(id, "fabric_art")
end

local levelName
function target_svistun()
	levelName = levelName or level.name()
	return levelName == 'esc_tunnel' and not has_alife_info('tunnel_rast_task2_report')
end

do
	local skipSr = {}
	function spw_squad_near_me(actor, cobj, p)
		local sobj = alife():object(cobj:id())
		local squadId = pn.prename(sobj) .."_squad"
		--"esc_rast_task2_give"
		
		if skipSr[cobj:name()] then
			return
		end
		
		skipSr[cobj:name()] = true
		if cobj:name() == "esc_tunnel_tushkan2_sr" then 
			local ph = level.object_by_id(alife():object("esc_tunnel_trup_bandit").id):get_physics_shell()
			
			ph:get_element_by_bone_name('bip01_head'):release_fixed()
			return ph:apply_force(35500, 0, 35500)
		end
		return sim_board.get_sim_board():create_squad(sobj, squadId, true, true)
	end
end

function svs_art_give(actor, npc)
	dialogs.relocate_item_section(pn.getNPC(actor, npc), 'svistun_art', 'in')
end

function has_svistun_art(actor, npc)
	return npc:object("svistun_art")
end

function svistun_spw()
	local p = patrol('tun_svistun_pnt')
	local pos, lv, gv = p:point(0), p:level_vertex_id(0), p:game_vertex_id(0)
	
	alife():create('esc_svistun', pos, lv, gv)
end